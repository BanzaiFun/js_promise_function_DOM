{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","div","document","createElement","body","querySelector","previousMessage","className","innerText","remove","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBH,EAAQI,iBAAiBH,EAAW,WAElCE,EAAkBF,UAAAA,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQM,GAAhF,UAKN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAMC,SAASC,cAAc,OAC7BC,EAAOF,SAASG,cAAc,QAC9BC,EAAkBJ,SAASG,cAAc,YAE/CJ,EAAIM,UAAY,UAChBN,EAAIO,UAAYR,EAEZM,GACFA,EAAgBG,SAElBL,EAAKM,OAAOT,IAGdU,OAAOC,QAAU,CACfrB,QAAAA,EACAQ,aAAAA","file":"main.a385e0b2.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    element.addEventListener(eventName, () => {\n      // eslint-disable-next-line\n      resolve(`It was ${eventName} on the element: ${element.nodeName}, id: ${element.id}.`);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const div = document.createElement('div');\n  const body = document.querySelector('body');\n  const previousMessage = document.querySelector('.message');\n\n  div.className = 'message';\n  div.innerText = message;\n\n  if (previousMessage) {\n    previousMessage.remove();\n  }\n  body.append(div);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}